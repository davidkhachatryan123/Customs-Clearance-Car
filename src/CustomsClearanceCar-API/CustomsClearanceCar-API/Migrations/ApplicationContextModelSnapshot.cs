// <auto-generated />
using System;
using CustomsClearanceCar_API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomsClearanceCar_API.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.EngineCapacity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.ToTable("EngineCapacities");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MarkId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarkId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EngineCapacityId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EngineCapacityId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.EngineCapacity", b =>
                {
                    b.HasOne("CustomsClearanceCar_API.Database.Models.Model", "Model")
                        .WithMany("EngineCapacities")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.Model", b =>
                {
                    b.HasOne("CustomsClearanceCar_API.Database.Models.Mark", "Mark")
                        .WithMany("Models")
                        .HasForeignKey("MarkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mark");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.Price", b =>
                {
                    b.HasOne("CustomsClearanceCar_API.Database.Models.EngineCapacity", "EngineCapacity")
                        .WithMany("Prices")
                        .HasForeignKey("EngineCapacityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EngineCapacity");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.EngineCapacity", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.Mark", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("CustomsClearanceCar_API.Database.Models.Model", b =>
                {
                    b.Navigation("EngineCapacities");
                });
#pragma warning restore 612, 618
        }
    }
}
